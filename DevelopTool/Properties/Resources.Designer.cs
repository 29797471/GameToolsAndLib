//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevelopTool.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevelopTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Icon cq128X128 {
            get {
                object obj = ResourceManager.GetObject("cq128X128", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 例1:配关卡通关奖励字段(通关固定奖励一次) ,且会同时奖励多件不同的物品和金钱
        ///	如:奖励2000金钱和两个1001的物品的可以如下(奖励标识分1.物品 2.金钱)
        ///	配表:   1:1001:2,2:0:2000
        ///	
        ///	数据结构定义:
        ///		struct SAward{int type;int id;int num} 
        ///	表格字段定义:
        ///		SAward 数组选项√
        ///
        ///例2:配关卡完成奖励字段(关卡完成后随机奖励),但是奖励是在固定物品之中随机的并且比例不同
        ///	如:在1001,1002中奖励奖励一件,几率分别为30%,70%,还要在1003,1004,1005间随机奖励一件
        ///   	配表: [1001:0.3,1002:0.7],[1003:0.33,1004:0.33,1005:0.34]
        ///	数据结构定义:
        ///		struct SItem{int id;float percent} 
        ///		struct SAward{SItem list;[数组√]}
        ///	表格字段定义:
        ///		SAward [数组√]
        ///
        ///注:表格字段定义的数组外层不需要加[],数据结构定义的数组要加[]数组间 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string customStructHelp {
            get {
                return ResourceManager.GetString("customStructHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 1. 浏览选择excel表格路径(对应的表格格式,首行为数据项,其它行为数据内容)
        ///2.点击相应表格编辑,添加程序读取的变量名和变量类型
        ///3.对复杂数据内容项可以自己定义数据结构,勾选数组时可解析分隔符,隔开的数据内容
        /// 例:数据1,2,3  
        ///可以定义一个int ,数组选上
        ///4.数据结构中的分隔符表示成员变量间的分隔符
        ///5.返回主界面浏览导出目录,选择一个unity项目中的config路径
        ///6.点击 导出自定类型(数据结构)
        ///7.最后先生成cs再生成xml
        ///8.uinty自动转换成asset 可以查看数据是否正确
        ///9.项目中通过管理类获取数据 的本地化字符串。
        /// </summary>
        internal static string excelHelp {
            get {
                return ResourceManager.GetString("excelHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 setting.dat 的本地化字符串。
        /// </summary>
        internal static string setPath {
            get {
                return ResourceManager.GetString("setPath", resourceCulture);
            }
        }
    }
}
